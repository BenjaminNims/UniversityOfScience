@page
@model UniversityOfScienceTwo.Pages.Courses.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Course</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Course.OwnerId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Course.OwnerId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Course.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Course.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Course.Designation)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Course.Designation)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Course.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Course.Status)
        </dd>
    </dl>
</div>
@if (User.IsInRole("UniversityAdministrators"))
    {
    @if (Model.Course.Status != CourseStatus.Approved)
        {
        @if ((await AuthorizationService.AuthorizeAsync(
              User, Model.Course, UniversityOperations.Approve)).Succeeded)
            {
            <form style="display:inline;" method="post">
                <input type="hidden" name="id" value="@Model.Course.CourseId" />
                <input type="hidden" name="status" value="@CourseStatus.Approved" />
                <button type="submit" class="btn btn-xs btn-success">Approve</button>
            </form>
            }
        }

    @if (Model.Course.Status != CourseStatus.Rejected)
        {
        @if ((await AuthorizationService.AuthorizeAsync(
              User, Model.Course, UniversityOperations.Reject)).Succeeded)
            {
            <form style="display:inline;" method="post">
                <input type="hidden" name="id" value="@Model.Course.CourseId" />
                <input type="hidden" name="status" value="@CourseStatus.Rejected" />
                <button type="submit" class="btn btn-xs btn-danger">Reject</button>
            </form>
            }
        }
    }
<div>
    @if ((await AuthorizationService.AuthorizeAsync(
        User, Model.Course,
        UniversityOperations.Update)).Succeeded)
    {
        <a asp-page="./Edit" asp-route-id="@Model.Course.CourseId">Edit</a>
        <text> | </text>
    }
    <a asp-page="./Index">Back to List</a>
</div>
